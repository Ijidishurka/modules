import time
import random
import logging
from .. import loader, utils
from random import randint, choice
from asyncio import sleep

logger = logging.getLogger(__name__)


def register(cb):
    cb(fake_ping())


class fake_ping(loader.Module):
    """–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª @modwini"""
    strings = {'name': 'fake ping v4'}

    async def pinjcmd(self, message):
        """–ò—Å–ø–æ–ª—å–∑—É–π .pinj <—Ü–∏—Ñ—Ä—ã>."""
        text = utils.get_args_raw(message)
        if not text:
            for pinj in ["<code>üêª Nofin...</code>"]:
                await message.edit(pinj)
                await sleep(0.3)

            named_tuple = time.localtime()
            time_string = time.strftime("%H:%M:%S", named_tuple)

            await message.edit(f"<b>‚è± –°–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–∫–ª–∏–∫–∞ Telegram:</b>\n<code>{random.randint(10, 1999)}.{random.randint(10, 99)}</code> <b>ms</b>\n<b>üòé –ü—Ä–æ—à–ª–æ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏: {time_string}</b>")
            return
        else:
            for pinj in ["<code>üêª Nofin...</code>"]:
                await message.edit(pinj)
                await sleep(0.3)

            named_tuple = time.localtime()
            time_string = time.strftime("%H:%M:%S", named_tuple)
            
            pinj = (f"<b>‚è± –°–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–∫–ª–∏–∫–∞ Telegram:</b>\n<code>{text}</code> <b>ms</b>\n<b>üòé –ü—Ä–æ—à–ª–æ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏: {time_string}</b>")

            await message.edit(pinj)
